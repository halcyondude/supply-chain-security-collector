{
	"data": {
		"repository": {
			"name": "in-toto",
			"nameWithOwner": "in-toto/in-toto",
			"url": "https://github.com/in-toto/in-toto",
			"description": "in-toto is a framework to protect supply chain integrity.",
			"releases": {
				"nodes": [
					{
						"name": "in-toto v0.1.1",
						"tagName": "0.1.1",
						"url": "https://github.com/in-toto/in-toto/releases/tag/0.1.1",
						"createdAt": "2017-11-09T19:54:34Z",
						"releaseAssets": {
							"nodes": [
								{
									"name": "in-toto-0.1.1.tar.gz.asc",
									"downloadUrl": "https://github.com/in-toto/in-toto/releases/download/0.1.1/in-toto-0.1.1.tar.gz.asc"
								},
								{
									"name": "in-toto-0.1.1.zip.asc",
									"downloadUrl": "https://github.com/in-toto/in-toto/releases/download/0.1.1/in-toto-0.1.1.zip.asc"
								}
							]
						}
					}
				]
			},
			"workflows": {
				"entries": [
					{
						"name": "_test.yml",
						"object": {
							"text": "on:\n  workflow_call:\n  # Permissions inherited from caller workflow\n\npermissions: {}\n\njobs:\n  test:\n    continue-on-error: ${{ matrix.experimental }}\n    strategy:\n      fail-fast: false\n      # Run regular in-toto tests on each OS/Python combination, plus linters\n      # on Linux/Python3.x only.\n      matrix:\n        python-version: ['3.9', '3.10', '3.11', '3.12', '3.13']\n        os: [ubuntu-latest, macos-latest, windows-latest]\n        toxenv: [py]\n        experimental: [false]\n        include:\n          - python-version: '3.9'\n            os: ubuntu-latest\n            toxenv: lint\n            experimental: false\n          - python-version: 3.x\n            os: ubuntu-latest\n            toxenv: with-sslib-main\n            experimental: true\n\n    runs-on: ${{ matrix.os }}\n\n    steps:\n      - name: Checkout in-toto\n        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683\n\n      - name: Set up Python ${{ matrix.python-version }}\n        uses: actions/setup-python@a26af69be951a213d495a4c3e4e4022e16d87065\n        with:\n          python-version: ${{ matrix.python-version }}\n          cache: 'pip'\n          cache-dependency-path: 'requirements*.txt'\n\n      - name: Install dependencies\n        run: |\n          python -m pip install --upgrade pip\n          python -m pip install tox\n\n      - name: Run tox\n        run: tox -e ${{ matrix.toxenv }}\n"
						}
					},
					{
						"name": "cd.yml",
						"object": {
							"text": "name: CD\nconcurrency: cd\n\non:\n  push:\n    tags:\n      - v*\n\npermissions: {}\n\njobs:\n  test:\n    name: Test\n    uses: ./.github/workflows/_test.yml\n\n  build:\n    name: Build\n    runs-on: ubuntu-latest\n    needs: test\n    steps:\n      - name: Checkout release tag\n        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2\n        with:\n          ref: ${{ github.event.workflow_run.head_branch }}\n\n      - name: Set up Python\n        uses: actions/setup-python@a26af69be951a213d495a4c3e4e4022e16d87065 # v5.6.0\n        with:\n          python-version: '3.x'\n\n      - name: Install build dependency\n        run: python3 -m pip install --constraint requirements-build.txt build\n\n      - name: Build binary wheel and source tarball\n        run: PIP_CONSTRAINT=requirements-build.txt python3 -m build --sdist --wheel --outdir dist/ .\n\n      - name: Store build artifacts\n        uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02 # v4.6.2\n        # NOTE: The GitHub release page contains the release artifacts too, but using\n        # GitHub upload/download actions seems robuster: there is no need to compute\n        # download URLs and tampering with artifacts between jobs is more limited.\n        with:\n          name: build-artifacts\n          path: dist\n\n  candidate_release:\n    name: Release candidate on Github for review\n    runs-on: ubuntu-latest\n    needs: build\n    permissions:\n      contents: write # to modify GitHub releases\n    outputs:\n      release_id: ${{ steps.gh-release.outputs.result }}\n    steps:\n      - name: Fetch build artifacts\n        uses: actions/download-artifact@d3f86a106a0bac45b974a628896c90dbdf5c8093 # v4.3.0\n        with:\n          name: build-artifacts\n          path: dist\n\n      - id: gh-release\n        name: Publish GitHub release draft\n        uses: actions/github-script@60a0d83039c74a4aee543508d2ffcb1c3799cdea # v7.0.1\n        with:\n          script: |\n            fs = require('fs')\n            res = await github.rest.repos.createRelease({\n              owner: context.repo.owner,\n              repo: context.repo.repo,\n              name: '${{ github.ref_name }}-rc',\n              tag_name: '${{ github.ref }}',\n              body: 'Release waiting for review...',\n            });\n\n            fs.readdirSync('dist/').forEach(file => {\n              github.rest.repos.uploadReleaseAsset({\n                owner: context.repo.owner,\n                repo: context.repo.repo,\n                release_id: res.data.id,\n                name: file,\n                data: fs.readFileSync('dist/' + file),\n              });\n            });\n            return res.data.id\n\n  release:\n    name: Release\n    runs-on: ubuntu-latest\n    needs: candidate_release\n    environment: release\n    permissions:\n      contents: write # to modify GitHub releases\n      id-token: write # to authenticate as Trusted Publisher to pypi.org\n    steps:\n      - name: Fetch build artifacts\n        uses: actions/download-artifact@d3f86a106a0bac45b974a628896c90dbdf5c8093 # v4.3.0\n        with:\n          name: build-artifacts\n          path: dist\n\n      - name: Publish binary wheel and source tarball on PyPI\n        # Only attempt pypi upload in upstream repository\n        if: github.repository == 'in-toto/in-toto'\n        uses: pypa/gh-action-pypi-publish@76f52bc884231f62b9a034ebfe128415bbaabdfc # v1.12.4\n\n      - name: Finalize GitHub release\n        uses: actions/github-script@60a0d83039c74a4aee543508d2ffcb1c3799cdea # v7.0.1\n        with:\n          script: |\n            github.rest.repos.updateRelease({\n              owner: context.repo.owner,\n              repo: context.repo.repo,\n              release_id: '${{ needs.candidate_release.outputs.release_id }}',\n              name: '${{ github.ref_name }}',\n              body: 'See [CHANGELOG.md](https://github.com/' +\n                     context.repo.owner + '/' + context.repo.repo +\n                    '/blob/${{ github.ref_name }}/CHANGELOG.md) for details.'\n            })\n"
						}
					},
					{
						"name": "ci.yml",
						"object": {
							"text": "name: Run in-toto tests and linter\n\non:\n  push:\n    branches: ['develop']\n  pull_request:\n  workflow_dispatch:\n\npermissions: {}\n\njobs:\n  test:\n    name: Test\n    uses: ./.github/workflows/_test.yml\n"
						}
					}
				]
			}
		}
	}
}